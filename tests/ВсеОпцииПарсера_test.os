#использовать "../src/core"
#Использовать asserts
#Использовать logos

Перем юТест;
Перем Лог;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;
	
	ИменаТестов = Новый Массив;
	
	ИменаТестов.Добавить("ТестДолжен_ПроверитьПарсингВсеОпции");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьПарсингМассивовВсеОпции");
	
	Возврат ИменаТестов;

КонецФункции

Функция ТестовыйСлучай(Знач Аргументы, Знач АргументыВыхода, Знач ЗначениеОпции)
	
	Тест = Новый Структура;
	Тест.Вставить("Аргументы", СтрРазделить(Аргументы," "));
	Тест.Вставить("АргументыВыхода", СтрРазделить(АргументыВыхода," "));
	Тест.Вставить("ЗначениеОпции", СтрРазделить(ЗначениеОпции," "));

	Возврат Тест;
КонецФункции

Процедура ТестДолжен_ПроверитьПарсингВсеОпции() Экспорт
	
	НаименованияОпции  = Новый Массив;
	НаименованияОпции.Добавить("-f");
	НаименованияОпции.Добавить("-F");
	НаименованияОпции.Добавить("--force");
	НаименованияОпции.Добавить("-o");
	НаименованияОпции.Добавить("--other");
		
	МассивОпций = Новый Массив;
	МассивОпций.Добавить(Опция("o other", "").ТСтрока());
	МассивОпций.Добавить(Опция("o other", "").ТДата());
	МассивОпций.Добавить(Опция("o other", "").ТЧисло());
	ОпцияForce = Опция("f F force", Ложь).Флаг();

	ТестовыеСлучаи = Новый Массив;

	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-f x", "x", "Истина null"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-f=false y", "y", "Ложь null"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("--force x", "x", "Истина null"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("--force=true y", "y", "истина null"));
	

	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-o x", "", "null x"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-o=x y", "y", "null x"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-ox y", "y", "null x"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("--other x", "", "null x"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("--other=x y", "y", "null x"));

	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-f -o x y", "y", "истина x"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-o x -f y", "y", "истина x"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-fo x y", "y", "истина x"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-foxxx y", "y", "истина xxx"));
	
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-Foxxx y", "y", "истина xxx"));
	

	Для каждого Тест Из ТестовыеСлучаи Цикл
		
		
		Для каждого ОпцияТеста Из МассивОпций Цикл
			НачальноеКоличество = Тест.Аргументы.Количество();
			Лог.Отладка("Проверяю тестовый случай: %1", СтрСоединить(Тест.Аргументы, " "));
			Лог.Отладка("-> тип опции: %1", ОпцияForce.ТипОпции);
		
			ИндексОпций = Новый Соответствие;
			ИндексОпций.Вставить("-f", ОпцияForce);
			ИндексОпций.Вставить("-F", ОпцияForce);
			ИндексОпций.Вставить("--force", ОпцияForce);
			ИндексОпций.Вставить("-o", ОпцияТеста);
			ИндексОпций.Вставить("--other", ОпцияТеста);
			
			Опции = Новый Соответствие;
			Опции.Вставить(ОпцияТеста, ОпцияТеста);
			Опции.Вставить(ОпцияForce, ОпцияForce);

			АргументыТеста = Тест.Аргументы;
			О_Парсера = Новый ВсеОпцииПарсера(Опции, ИндексОпций);
			Утверждения.ПроверитьРавенство("-of", О_Парсера.ВСтроку(), "Парсер опции должен быть равен -of");
		
			Контекст = Новый КонтекстПарсеров();
			Результат = О_Парсера.Поиск(АргументыТеста, Контекст);
			Утверждения.ПроверитьИстину(Результат.Найден, "Опции должны быть найдены");
			Утверждения.ПроверитьРавенство(НачальноеКоличество, Тест.Аргументы.Количество(), "Количество аргументов не должно измениться");
			
			Утверждения.ПроверитьРавенство(СтрСоединить(Результат.Аргументы, " "), СтрСоединить(Тест.АргументыВыхода, " "), "Аргументы выходные должны быть равны");
			Если Не Контекст.Опции[ОпцияForce] = Неопределено Тогда
				Утверждения.ПроверитьРавенство(Булево(Контекст.Опции[ОпцияForce][0]),Булево(Тест.ЗначениеОпции[0]), "Ожидаемые результаты опции --force должны быть равны");
			КонецЕсли;
			Если Не Контекст.Опции[ОпцияТеста] = Неопределено Тогда
				Утверждения.ПроверитьРавенство(Контекст.Опции[ОпцияТеста][0], Тест.ЗначениеОпции[1], "Ожидаемые результаты опции теста должны быть равны");
			КонецЕсли;
			

			КонтекстСброса = Новый КонтекстПарсеров();
			КонтекстСброса.СбросОпций = Истина;
			Результат = О_Парсера.Поиск(АргументыТеста, КонтекстСброса);
			Утверждения.ПроверитьЛожь(Результат.Найден, "Любые опции не должны быть найдены");

		
		КонецЦикла;
		
	КонецЦикла;	

КонецПроцедуры

Процедура ТестДолжен_ПроверитьПарсингМассивовВсеОпции() Экспорт
	
	НаименованияОпции  = Новый Массив;
	НаименованияОпции.Добавить("-f");
	НаименованияОпции.Добавить("--force");
	НаименованияОпции.Добавить("-o");
	НаименованияОпции.Добавить("--other");
		
	МассивОпций = Новый Массив;
	МассивОпций.Добавить(Опция("o other", "").ТМассивСтрок());
	МассивОпций.Добавить(Опция("o other", "").ТМассивДат());
	МассивОпций.Добавить(Опция("o other", "").ТМассивЧисел());
	ОпцияForce = Опция("f force", Ложь).Флаг();

	ТестовыеСлучаи = Новый Массив;

 	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-f x", "x", "Истина null"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-f=false y", "y", "Ложь null"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("--force x", "x", "Истина null"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("--force=true y", "y", "истина null"));
	

	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-o x -o x2", "", "null x x2"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-o=x -o=x2 y", "y", "null x x2"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-o=x -o=x2 -y z", "-y z", "null x x2"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-ox -ox2 y", "y", "null x x2"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("--other x --other x2", "", "null x x2"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("--other=x --other=x2 -y", "-y", "null x x2"));

	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-f -o x -o x2 y", "y", "истина x x2"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-o x -f -o x2 y", "y", "истина x x2"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-o x -o x2 -f y", "y", "истина x x2"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-fo x -o=x2 y", "y", "истина x x2"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-foxxx -oxxx2 -y z", "-y z", "истина xxx xxx2"));
	ТестовыеСлучаи.Добавить(ТестовыйСлучай("-foxxx -oxxx2 z", "z", "истина xxx xxx2"));
	
	Для каждого Тест Из ТестовыеСлучаи Цикл
		
		
		Для каждого ОпцияТеста Из МассивОпций Цикл
			НачальноеКоличество = Тест.Аргументы.Количество();
			Лог.Отладка("Проверяю тестовый случай: %1", СтрСоединить(Тест.Аргументы, " "));
			Лог.Отладка("-> тип опции: %1", ОпцияForce.ТипОпции);
		
			ИндексОпций = Новый Соответствие;
			ИндексОпций.Вставить("-f", ОпцияForce);
			ИндексОпций.Вставить("--force", ОпцияForce);
			ИндексОпций.Вставить("-o", ОпцияТеста);
			ИндексОпций.Вставить("--other", ОпцияТеста);
			
			Опции = Новый Соответствие;
			Опции.Вставить(ОпцияТеста, ОпцияТеста);
			Опции.Вставить(ОпцияForce, ОпцияForce);

			АргументыТеста = Тест.Аргументы;
			О_Парсера = Новый ВсеОпцииПарсера(Опции, ИндексОпций);
			Утверждения.ПроверитьРавенство("-of", О_Парсера.ВСтроку(), "Парсер опции должен быть равен -of");
		
			Контекст = Новый КонтекстПарсеров();
			Результат = О_Парсера.Поиск(АргументыТеста, Контекст);
			Утверждения.ПроверитьИстину(Результат.Найден, "Опции должны быть найдены");
			Утверждения.ПроверитьРавенство(НачальноеКоличество, Тест.Аргументы.Количество(), "Количество аргументов не должно измениться");
			
			Результат = О_Парсера.Поиск(АргументыТеста, Контекст);
			Утверждения.ПроверитьИстину(Результат.Найден, "Опции должны быть найдены");
			Утверждения.ПроверитьРавенство(НачальноеКоличество, Тест.Аргументы.Количество(), "Количество аргументов не должно измениться");
			
			Утверждения.ПроверитьРавенство(СтрСоединить(Результат.Аргументы, " "), СтрСоединить(Тест.АргументыВыхода, " "), "Аргументы выходные должны быть равны");
			
			Если Не Контекст.Опции[ОпцияForce] = Неопределено Тогда
				Утверждения.ПроверитьРавенство(Булево(Контекст.Опции[ОпцияForce][0]),Булево(Тест.ЗначениеОпции[0]), "Ожидаемые результаты опции --force должны быть равны");
			КонецЕсли;
			
			Если Не Контекст.Опции[ОпцияТеста] = Неопределено Тогда
				Утверждения.ПроверитьРавенство(Контекст.Опции[ОпцияТеста][0], Тест.ЗначениеОпции[1], "Ожидаемые результаты опции теста должны быть равны");
				Утверждения.ПроверитьРавенство(Контекст.Опции[ОпцияТеста][1], Тест.ЗначениеОпции[2], "Ожидаемые результаты опции теста должны быть равны");
			КонецЕсли;

			КонтекстСброса = Новый КонтекстПарсеров();
			КонтекстСброса.СбросОпций = Истина;
			Результат = О_Парсера.Поиск(АргументыТеста, КонтекстСброса);
			Утверждения.ПроверитьЛожь(Результат.Найден, "Любые опции не должны быть найдены");

		
		КонецЦикла;
		
	КонецЦикла;	

КонецПроцедуры

Функция Опция(Наименование, ЗначениеПоУмолчанию)
	Возврат Новый ПараметрКоманды("опция", Наименование,  ЗначениеПоУмолчанию, "Тестовый параметр f")
КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.lib.cli_class_options");
//Лог.УстановитьУровень(УровниЛога.Отладка);